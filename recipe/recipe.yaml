context:
  name: tree-sitter-c-sharp
  version: "0.23.1"

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  url: https://github.com/tree-sitter/tree-sitter-c-sharp/archive/refs/tags/v${{ version }}.tar.gz
  sha256: c0b008dca3c6820604bf0853b9668ba034f9750d89d170ba834261e94e2cd917
  # Source missing the tree_sitter/parser.h
  # url: https://pypi.org/packages/source/t/tree-sitter-c-sharp/tree_sitter_c_sharp-${{ version }}.tar.gz
  # sha256: 322e2cfd3a547a840375276b2aea3335fa6458aeac082f6c60fec3f745c967eb

build:
  script:
    - ${{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv
  number: 3

requirements:
  build:
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - if: target_platform != build_platform
      then:
        - cross-python_${{ target_platform }}
        - python
  host:
    - pip
    - python
    - setuptools >=42
  run:
    - python

tests:
  - python:
      imports:
        - tree_sitter_c_sharp
      pip_check: true
  - script:
      - python -m pytest bindings/python/tests/
    requirements:
      run:
        - pytest
        - python
        - tree_sitter
    files:
      source:
        - bindings/python/tests/

about:
  homepage: https://github.com/tree-sitter/tree-sitter-c-sharp
  summary: 'C# Grammar for tree-sitter.'
  description: |
    C# grammar for tree-sitter based upon the Roslyn grammar with changes in order to:
      - Deal with differences between the parsing technologies
      - Work around some bugs in that grammar
      - Handle #if, #else, #elif, #endif blocks
      - Support syntax highlighting/parsing of fragments
      - Simplify the output tree
      - Reduce parser state count and complexity
      - Be in-line with tree-sitter's convention where applicable
  license: MIT
  license_file: LICENSE
  repository: https://github.com/tree-sitter/tree-sitter-c-sharp

extra:
  recipe-maintainers:
    - MementoRC
